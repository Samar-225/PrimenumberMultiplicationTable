package com.davidmadethis.primenumbermultiplicationtable.ui.main

import android.os.Bundle
import android.util.Log
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.fragment.app.Fragment
import androidx.lifecycle.Observer
import androidx.lifecycle.ViewModelProviders
import com.davidmadethis.primenumbermultiplicationtable.R
import com.davidmadethis.primenumbermultiplicationtable.data.Constants
import com.davidmadethis.primenumbermultiplicationtable.databinding.MainFragmentBinding
import kotlinx.android.synthetic.main.main_fragment.*
import kotlin.concurrent.thread

class MainFragment : Fragment() {

    companion object {
        fun newInstance() = MainFragment()
    }

    private lateinit var viewModel: MainViewModel

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        return MainFragmentBinding.inflate(inflater, container, false).root
    }

    override fun onActivityCreated(savedInstanceState: Bundle?) {
        super.onActivityCreated(savedInstanceState)
        viewModel = ViewModelProviders.of(this).get(MainViewModel::class.java)

        /*
        Generate the numbers on a background thread
         */
        thread {
            Log.e("state", "started thread")
            viewModel.generateNumbers()

        }

        /*
        Listens for when all the prime numbers have been generated by the background thread
         */
        viewModel.primenumbers.observe(this, Observer {
            gridview.numColumns = Constants.GRID_COUNT
            val data = viewModel.getMultiplicationTable(it)
            gridview.adapter = MainGridAdapter(
                data, context!!
            )
//            message.append(it.toString())
        })
    }
}
